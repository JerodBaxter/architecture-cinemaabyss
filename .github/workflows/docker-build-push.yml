name: Docker Build and Push

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/docker-build-push.yml'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  MONOLITH_IMAGE_NAME: ${{ github.repository }}/monolith
  MOVIES_SERVICE_IMAGE_NAME: ${{ github.repository }}/movies-service
  EVENTS_SERVICE_IMAGE_NAME: ${{ github.repository }}/events-service
  PROXY_SERVICE_IMAGE_NAME: ${{ github.repository }}/proxy-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Monolith and Movies Service (existing blocks)

      - name: Extract metadata (tags, labels) for Events Service
        id: meta-events
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.EVENTS_SERVICE_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build and push Events Service Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./src/microservices/events
          push: true
          tags: ${{ steps.meta-events.outputs.tags }}
          labels: ${{ steps.meta-events.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata (tags, labels) for Proxy Service
        id: meta-proxy
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROXY_SERVICE_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build and push Proxy Service Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./src/microservices/proxy
          push: true
          tags: ${{ steps.meta-proxy.outputs.tags }}
          labels: ${{ steps.meta-proxy.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up Node.js for API tests
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install API test dependencies
        run: |
          cd src/api-tests
          npm install

      - name: Run API tests
        run: |
          cd src/api-tests
          npm test

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
